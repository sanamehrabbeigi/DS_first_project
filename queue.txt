#include<iostream>
//#include<conio.h>
#include<string>

using namespace std;

template <typename T>

class queue
{
private:
	T * arr;
	long long sz;
public:
	queue();
	~queue();

	void push(T data);
	T front();
	T rear();
	void pop();
	int search(T data);
	int size();

	void showqueue();
};
template <typename T>
queue<T>::queue()
{
	// cout << "constructor is called!\n";
	sz = 0;
	arr = new T[sz];
}
template <typename T>
queue<T>::~queue()
{
	// cout << "distructor is called!\n";
	delete[] arr;
}

template <typename T>
void queue<T>::push(T data)
{
	T * temp = new T[sz];
	temp = arr;
	sz++;
	arr = new T[sz];
	arr = temp;
	arr[sz - 1] = data;
}

template <typename T>
T queue<T> ::front()
{
	return arr[0];
}

template <typename T>
T queue<T> ::rear()
{
	return arr[sz-1];
}

template <typename T>
void queue<T>::pop()
{
	sz--;
}

template <typename T>
int queue<T>::search(T data)
{
	int h = -1;
	for (long long i = 0; i < sz; i++)
		if (arr[i] == data)
			h = i;
	return h;
}
template <typename T>
int queue<T>::size()
{
	return sz;
}

template <typename T>
void queue<T>::showqueue()
{
	for (long long i = 0; i < sz; i++)
		cout << arr[i] << " ";
	cout << "\n";
}

int main()
{
	cout << "HELLO! WHATS UP?!?\n";
	queue<int> v;
	bool bb = 1;
	while (bb)
	{
		int in;
		cout << "1.push(T data)\n2.front()3.rear()\n4.pop()\n6.search(T data)\n7.size()\n12.showqueue()\n13.exit\nPlease enter your number!\n";
		cin >> in;
		int index1, index2, data;
		switch (in)
		{
		case 1:
			cout << "Please enter data!\n";
			cin >> data;
			v.push(data);
			break;
		case 2:
			cout << v.front() << endl;
			break;
		case 3:
			cout << v.rear() << endl;;
			break;
		case 4:
			v.pop();
			break;
		case 5:
			break;
		case 6:
			cout << "Please enter data!\n";
			cin >> data;
			if (v.search(data) == -1)
				cout << "NOT FOUND!\n";
			else
				cout << "FOUND IT! : " << v.search(data) << endl;
			break;
		case 7:
			cout << "size of queue : " << v.size() << endl;
			break;
		case 8:
			break;
		case 9:
			break;
		case 10:
			break;
		case 11:
			break;
		case 12:
			v.showqueue();
			break;
		case 13:
			cout << "GOODBYE! HAVE A NICE DAY!\n";
			bb = 0;
			break;
		default:
			cout << "Wrong number! Try again!\n";
			break;
		}
	}
	//	getch();
	return 0;
}